name: Run Tests

on:
  push:
  pull_request:

jobs:
  single-instance:
    name: Testing (PHP ${{ matrix.php }}; Instance ${{ matrix.redis }})
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      mysql:
        image: mysql:5.7
        ports:
          - '3306:3306'
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress_test
      redis:
        image: redis:${{ matrix.redis }}
        ports:
          - '6379:6379'

    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2', '7.3', '7.4', '8.0', '8.1' ]
        composer: ['composer']
        redis: [ '4.0.14', '5.0.12', '6.2.6' ]
        include:
          - php: '7.1'
            composer: 'composer:v2.2'
            redis: '4.0.14'
          - php: '7.1'
            composer: 'composer:v2.2'
            redis: '5.0.12'
          - php: '7.1'
            composer: 'composer:v2.2'
            redis: '6.2.6'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: msgpack, igbinary, redis-5.3.7
          tools: ${{ matrix.composer }}

      - name: Set up WordPress and WordPress Test Library
        uses: sjinks/setup-wordpress-test-library@master
        with:
          version: latest

      - name: Install PHP Dependencies
        uses: ramsey/composer-install@v2
        with:
          ignore-cache: "yes"

      - name: Install missing library
        run: |
          composer require --dev yoast/phpunit-polyfills

      - name: Verify MySQL connection
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} --silent; do
            sleep 1
          done
        timeout-minutes: 1

      - name: Run test suite
        run: ./vendor/bin/phpunit

  cluster-instance:
    name: Testing (PHP ${{ matrix.php }}; Cluster ${{ matrix.redis }})
    runs-on: ubuntu-latest
    timeout-minutes: 5
    services:
      mysql:
        image: mysql:5.7
        ports:
          - '3306:3306'
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress_test
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2', '7.3', '7.4', '8.0', '8.1' ]
        composer: ['composer']
        redis: [ '5.0.12', '6.2.1' ]
        include:
          - php: '7.1'
            composer: 'composer:v2.2'
            redis: '5.0.12'
          - php: '7.1'
            composer: 'composer:v2.2'
            redis: '6.2.1'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Redis cluster
        uses: brunoofarias-dev/redis-cluster-github-action@main
        with:
          redis-version: ${{ matrix.redis }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: msgpack, igbinary, redis-5.3.7
          tools: ${{ matrix.composer }}

      - name: Set up WordPress and WordPress Test Library
        uses: sjinks/setup-wordpress-test-library@master
        with:
          version: latest

      - name: Install PHP Dependencies
        uses: ramsey/composer-install@v2
        with:
          ignore-cache: "yes"

      - name: Install missing library
        run: |
          composer require --dev yoast/phpunit-polyfills

      - name: Verify MySQL connection
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} --silent; do
            sleep 1
          done
        timeout-minutes: 1

      - name: Run test suite
        run: ./vendor/bin/phpunit
